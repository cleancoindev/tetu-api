/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NoopStrategy, NoopStrategyInterface } from "../NoopStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "__rewardTokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "__assets",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldValue",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newValue",
        type: "address",
      },
    ],
    name: "UpdateController",
    type: "event",
  },
  {
    inputs: [],
    name: "STRATEGY_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyBackRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "continueInvesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "created",
    outputs: [
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "doHardWork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "initializeControllable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investAllUnderlying",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investedUnderlyingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "isGovernance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pausedInvesting",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platform",
    outputs: [
      {
        internalType: "enum IStrategy.Platform",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "poolTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "poolWeeklyRewardsAmount",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "readyToClaim",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardTokenIdx",
        type: "uint256",
      },
    ],
    name: "rewardBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPoolBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "salvage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "unsalvageableTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526004805460ff191690553480156200001b57600080fd5b5060405162001956380380620019568339810160408190526200003e9162000514565b848484846127106200007260017f5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c3618620005b4565b60008051602062001916833981519152146200009e57634e487b7160e01b600052600160045260246000fd5b620000cb60017f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8b620005b4565b6000805160206200193683398151915214620000f757634e487b7160e01b600052600160045260246000fd5b6200010d856200023160201b62000bc11760201c565b6000805462010000600160b01b031916620100006001600160a01b038781169190910291909117909155600180546001600160a01b031916918516919091179055815162000163906005906020850190620003c6565b50600381905560005b600554811015620001e857600160026000600584815481106200019f57634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff191691151591909117905580620001df81620005ce565b9150506200016c565b505050506001600160a01b03166000908152600260209081526040909120805460ff191660011790558251620002259250600691840190620003c6565b50505050505062000618565b600054610100900460ff16806200024b575060005460ff16155b620002b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff16158015620002d7576000805461ffff19166101011790555b620002e28262000311565b620002fa426000805160206200193683398151915255565b80156200030d576000805461ff00191690555b5050565b6001600160a01b038116620003585760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401620002ab565b7f19b7d592cea0dfda222f6a4ea5c5a8d018ee9c6b1d0a917483a405de94eb26cd62000391600080516020620019168339815191525490565b604080516001600160a01b03928316815291841660208301520160405180910390a16000805160206200191683398151915255565b8280548282559060005260206000209081019282156200041e579160200282015b828111156200041e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620003e7565b506200042c92915062000430565b5090565b5b808211156200042c576000815560010162000431565b80516001600160a01b03811681146200045f57600080fd5b919050565b600082601f83011262000475578081fd5b815160206001600160401b038083111562000494576200049462000602565b8260051b604051601f19603f83011681018181108482111715620004bc57620004bc62000602565b60405284815283810192508684018288018501891015620004db578687fd5b8692505b858310156200050857620004f38162000447565b845292840192600192909201918401620004df565b50979650505050505050565b600080600080600060a086880312156200052c578081fd5b620005378662000447565b9450620005476020870162000447565b9350620005576040870162000447565b60608701519093506001600160401b038082111562000574578283fd5b6200058289838a0162000464565b9350608088015191508082111562000598578283fd5b50620005a78882890162000464565b9150509295509295909350565b600082821015620005c957620005c9620005ec565b500390565b6000600019821415620005e557620005e5620005ec565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6112ee80620006286000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806397c402c411610104578063d6048df5116100a2578063e945cdcd11610071578063e945cdcd146103a7578063f77c4791146103ba578063fbfa77cf146103cf578063ffa1ad74146103e057600080fd5b8063d6048df514610384578063db6204851461038c578063dd882587146102ce578063dee1f0e41461039457600080fd5b8063bfd131f1116100de578063bfd131f114610354578063c2b18aa01461035c578063ce8c42e814610364578063d3df8aa41461037757600080fd5b806397c402c41461032457806398fc9cfd14610339578063b429afeb1461034157600080fd5b806359356c5c1161017157806371a973051161014b57806371a97305146102b95780637a5c08ae146102ce57806386e3ff75146102d55780638f37c6a5146102e857600080fd5b806359356c5c1461024e5780636edd5446146102565780636f307dc31461028e57600080fd5b80634a8cfa69116101ad5780634a8cfa69146102275780634bde38c81461022f5780634fa5d8541461023e5780635641ec031461024657600080fd5b80631113ef52146101d4578063325a19f1146101e957806345d01e4a1461021f575b600080fd5b6101e76101e236600461105f565b610404565b005b7f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a545b6040519081526020015b60405180910390f35b61020c6104db565b6101e76104f5565b60016040516102169190611190565b6101e76105b5565b6101e7610655565b61020c6106c0565b6102816040518060400160405280600c81526020016b4e6f6f70537472617465677960a01b81525081565b60405161021691906111b8565b6000546201000090046001600160a01b03165b6040516001600160a01b039091168152602001610216565b6102c1610741565b604051610216919061110b565b600061020c565b61020c6102e33660046110bf565b6107a3565b6103146102f6366004611027565b6001600160a01b031660009081526002602052604090205460ff1690565b6040519015158152602001610216565b61032c610850565b6040516102169190611158565b60035461020c565b61031461034f366004611027565b6108a9565b6101e76108dc565b6102c1610971565b6101e76103723660046110bf565b6109d1565b6004546103149060ff1681565b61032c610a8d565b6101e7610ab7565b6103146103a2366004611027565b610b1f565b6101e76103b5366004611027565b610bc1565b600080516020611299833981519152546102a1565b6001546001600160a01b03166102a1565b610281604051806040016040528060058152602001640312e302e360dc1b81525081565b3361041b6000805160206112998339815191525490565b6001600160a01b0316146104675760405162461bcd60e51b815260206004820152600e60248201526d3737ba1031b7b73a3937b63632b960911b60448201526064015b60405180910390fd5b6001600160a01b03821660009081526002602052604090205460ff16156104c25760405162461bcd60e51b815260206004820152600f60248201526e6e6f742073616c7661676561626c6560881b604482015260640161045e565b6104d66001600160a01b0383168483610ca6565b505050565b60006104f06104e86106c0565b600090610cf8565b905090565b6001546001600160a01b031633148061052e5750600080516020611299833981519152546001600160a01b0316336001600160a01b0316145b8061053d575061053d33610b1f565b6105595760405162461bcd60e51b815260040161045e906111eb565b60045460ff16156105955760405162461bcd60e51b81526020600482015260066024820152651c185d5cd95960d21b604482015260640161045e565b600061059f6106c0565b11156105b3576105b36105b06106c0565b50565b565b60045460ff16156105f15760405162461bcd60e51b81526020600482015260066024820152651c185d5cd95960d21b604482015260640161045e565b6001546001600160a01b031633148061062a5750600080516020611299833981519152546001600160a01b0316336001600160a01b0316145b80610639575061063933610b1f565b6105b35760405162461bcd60e51b815260040161045e906111eb565b61065e336108a9565b8061066d575061066d33610b1f565b6106b15760405162461bcd60e51b81526020600482015260156024820152743737ba1031b7b73a3937b63632b91037b91033b7bb60591b604482015260640161045e565b6004805460ff19166001179055565b600080546040516370a0823160e01b8152306004820152620100009091046001600160a01b0316906370a082319060240160206040518083038186803b15801561070957600080fd5b505afa15801561071d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f091906110d7565b6060600680548060200260200160405190810160405280929190818152602001828054801561079957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161077b575b5050505050905090565b6000600582815481106107c657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561081257600080fd5b505afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a91906110d7565b92915050565b604080516001808252818301909252606091600091906020808301908036833701905050905060008160008151811061089957634e487b7160e01b600052603260045260246000fd5b6020908102919091010152919050565b60006108c16000805160206112998339815191525490565b6001600160a01b0316826001600160a01b0316149050919050565b6001546001600160a01b03163314806109155750600080516020611299833981519152546001600160a01b0316336001600160a01b0316145b80610924575061092433610b1f565b6109405760405162461bcd60e51b815260040161045e906111eb565b6001546105b3906001600160a01b03166109586106c0565b6000546201000090046001600160a01b03169190610ca6565b60606005805480602002602001604051908101604052809291908181526020018280548015610799576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161077b575050505050905090565b6001546001600160a01b0316331480610a0a5750600080516020611299833981519152546001600160a01b0316336001600160a01b0316145b80610a195750610a1933610b1f565b610a355760405162461bcd60e51b815260040161045e906111eb565b610a3d6106c0565b811115610a6a576000610a58610a516106c0565b8390610d0b565b90506000610a668183610d17565b5050505b6001546000546105b0916001600160a01b03620100009092048216911683610ca6565b60408051600180825281830190925260609160009190602080830190803683370190505092915050565b610ac0336108a9565b80610acf5750610acf33610b1f565b610b135760405162461bcd60e51b81526020600482015260156024820152743737ba1031b7b73a3937b63632b91037b91033b7bb60591b604482015260640161045e565b6004805460ff19169055565b6000816001600160a01b0316610b416000805160206112998339815191525490565b6001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7957600080fd5b505afa158015610b8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb19190611043565b6001600160a01b03161492915050565b600054610100900460ff1680610bda575060005460ff16155b610c3d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161045e565b600054610100900460ff16158015610c5f576000805461ffff19166101011790555b610c6882610d2d565b610c90427f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a55565b8015610ca2576000805461ff00191690555b5050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526104d6908490610ddd565b6000610d04828461120e565b9392505050565b6000610d048284611226565b6000818310610d265781610d04565b5090919050565b6001600160a01b038116610d725760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b604482015260640161045e565b7f19b7d592cea0dfda222f6a4ea5c5a8d018ee9c6b1d0a917483a405de94eb26cd610da96000805160206112998339815191525490565b604080516001600160a01b03928316815291841660208301520160405180910390a160008051602061129983398151915255565b6000610e32826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610eaf9092919063ffffffff16565b8051909150156104d65780806020019051810190610e50919061109f565b6104d65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161045e565b6060610ebe8484600085610ec6565b949350505050565b606082471015610f275760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161045e565b843b610f755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161045e565b600080866001600160a01b03168587604051610f9191906110ef565b60006040518083038185875af1925050503d8060008114610fce576040519150601f19603f3d011682016040523d82523d6000602084013e610fd3565b606091505b5091509150610fe3828286610fee565b979650505050505050565b60608315610ffd575081610d04565b82511561100d5782518084602001fd5b8160405162461bcd60e51b815260040161045e91906111b8565b600060208284031215611038578081fd5b8135610d0481611283565b600060208284031215611054578081fd5b8151610d0481611283565b600080600060608486031215611073578182fd5b833561107e81611283565b9250602084013561108e81611283565b929592945050506040919091013590565b6000602082840312156110b0578081fd5b81518015158114610d04578182fd5b6000602082840312156110d0578081fd5b5035919050565b6000602082840312156110e8578081fd5b5051919050565b6000825161110181846020870161123d565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561114c5783516001600160a01b031683529284019291840191600101611127565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561114c57835183529284019291840191600101611174565b60208101600583106111b257634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600082518060208401526111d781604085016020870161123d565b601f01601f19169190910160400192915050565b6020808252600990820152683337b93134b23232b760b91b604082015260600190565b600082198211156112215761122161126d565b500190565b6000828210156112385761123861126d565b500390565b60005b83811015611258578181015183820152602001611240565b83811115611267576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146105b057600080fdfe5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c3617a26469706673582212200c63cf696844d0fa436acebc51e3f922f4b0344265739dffe7ee3c700a37e25364736f6c634300080400335165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c36176f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a";

export class NoopStrategy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _controller: string,
    _underlying: string,
    _vault: string,
    __rewardTokens: string[],
    __assets: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NoopStrategy> {
    return super.deploy(
      _controller,
      _underlying,
      _vault,
      __rewardTokens,
      __assets,
      overrides || {}
    ) as Promise<NoopStrategy>;
  }
  getDeployTransaction(
    _controller: string,
    _underlying: string,
    _vault: string,
    __rewardTokens: string[],
    __assets: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _controller,
      _underlying,
      _vault,
      __rewardTokens,
      __assets,
      overrides || {}
    );
  }
  attach(address: string): NoopStrategy {
    return super.attach(address) as NoopStrategy;
  }
  connect(signer: Signer): NoopStrategy__factory {
    return super.connect(signer) as NoopStrategy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NoopStrategyInterface {
    return new utils.Interface(_abi) as NoopStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NoopStrategy {
    return new Contract(address, _abi, signerOrProvider) as NoopStrategy;
  }
}
