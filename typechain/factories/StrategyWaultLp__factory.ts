/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StrategyWaultLp,
  StrategyWaultLpInterface,
} from "../StrategyWaultLp";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldValue",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newValue",
        type: "address",
      },
    ],
    name: "UpdateController",
    type: "event",
  },
  {
    inputs: [],
    name: "STRATEGY_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WEX_POLY_MASTER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyBackRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "computeWaultWeeklyPoolReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "continueInvesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "created",
    outputs: [
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "doHardWork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "initializeControllable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investAllUnderlying",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investedUnderlyingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "isGovernance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pausedInvesting",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platform",
    outputs: [
      {
        internalType: "enum IStrategy.Platform",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolWeeklyRewardsAmount",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readyToClaim",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardTokenIdx",
        type: "uint256",
      },
    ],
    name: "rewardBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPoolBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "salvage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "unsalvageableTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6004805460ff1916905560a0604052734c4bf319237d98a30a929a96112effa8da3510eb60809081526200003890600890600162000905565b503480156200004657600080fd5b50604051620028f1380380620028f18339810160408190526200006991620009ac565b8584866008805480602002602001604051908101604052809291908181526020018280548015620000c457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620000a5575b505050505073c8bd86e5a132ac0bf10134e270de06a8ba317bfe858585858561271060017f5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c361860001c62000118919062000a74565b600080516020620028b1833981519152146200014457634e487b7160e01b600052600160045260246000fd5b6200017160017f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8b62000a74565b600080516020620028d1833981519152146200019d57634e487b7160e01b600052600160045260246000fd5b620001b3856200077460201b6200105a1760201c565b6000805462010000600160b01b031916620100006001600160a01b038781169190910291909117909155600180546001600160a01b03191691851691909117905581516200020990600590602085019062000905565b50600381905560005b6005548110156200028e57600160026000600584815481106200024557634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff191691151591909117905580620002858162000a8e565b91505062000212565b5050506001600160a01b039182166000908152600260205260409020805460ff1916600117905550831615159050620003025760405162461bcd60e51b81526020600482015260116024820152701e995c9bc81859191c995cdcc81c1bdbdb607a1b60448201526064015b60405180910390fd5b600680546001600160a01b0319166001600160a01b0384169081179091556007829055604051631526fe2760e01b81526004810183905260009190631526fe279060240160806040518083038186803b1580156200035f57600080fd5b505afa15801562000374573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200039a919062000a33565b5050600054919250506001600160a01b03808316620100009092041614620003f85760405162461bcd60e51b815260206004820152601060248201526f77726f6e6720756e6465726c79696e6760801b6044820152606401620002f9565b50505050506001600160a01b038616151591506200044d90505760405162461bcd60e51b815260206004820152600f60248201526e7a65726f20756e6465726c79696e6760881b6044820152606401620002f9565b6001600160a01b038316620004935760405162461bcd60e51b815260206004820152600b60248201526a07a65726f20746f6b656e360ac1b6044820152606401620002f9565b6001600160a01b038216620004d95760405162461bcd60e51b815260206004820152600b60248201526a7a65726f20746f6b656e3160a81b6044820152606401620002f9565b816001600160a01b0316836001600160a01b031614156200052b5760405162461bcd60e51b815260206004820152600b60248201526a73616d6520746f6b656e7360a81b6044820152606401620002f9565b600980546001818101835560008381527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af92830180546001600160a01b03808a166001600160a01b031992831617909255855493840190955591909201805486831694169390931790925560408051630dfe168160e01b815290519192871691630dfe168191600480820192602092909190829003018186803b158015620005d257600080fd5b505afa158015620005e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200060d919062000986565b90506000856001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156200064b57600080fd5b505afa15801562000660573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000686919062000986565b9050816001600160a01b0316856001600160a01b03161480620006ba5750806001600160a01b0316856001600160a01b0316145b620006f75760405162461bcd60e51b815260206004820152600c60248201526b077726f6e6720746f6b656e360a41b6044820152606401620002f9565b816001600160a01b0316846001600160a01b03161480620007295750806001600160a01b0316846001600160a01b0316145b620007665760405162461bcd60e51b815260206004820152600c60248201526b77726f6e6720746f6b656e3160a01b6044820152606401620002f9565b505050505050505062000adb565b600054610100900460ff16806200078e575060005460ff16155b620007f35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620002f9565b600054610100900460ff1615801562000816576000805461ffff19166101011790555b620008218262000850565b6200083942600080516020620028d183398151915255565b80156200084c576000805461ff00191690555b5050565b6001600160a01b038116620008975760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401620002f9565b7f19b7d592cea0dfda222f6a4ea5c5a8d018ee9c6b1d0a917483a405de94eb26cd620008d0600080516020620028b18339815191525490565b604080516001600160a01b03928316815291841660208301520160405180910390a1600080516020620028b183398151915255565b8280548282559060005260206000209081019282156200095d579160200282015b828111156200095d57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000926565b506200096b9291506200096f565b5090565b5b808211156200096b576000815560010162000970565b60006020828403121562000998578081fd5b8151620009a58162000ac2565b9392505050565b60008060008060008060c08789031215620009c5578182fd5b8651620009d28162000ac2565b6020880151909650620009e58162000ac2565b6040880151909550620009f88162000ac2565b606088015190945062000a0b8162000ac2565b608088015190935062000a1e8162000ac2565b8092505060a087015190509295509295509295565b6000806000806080858703121562000a49578384fd5b845162000a568162000ac2565b60208601516040870151606090970151919890975090945092505050565b60008282101562000a895762000a8962000aac565b500390565b600060001982141562000aa55762000aa562000aac565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811462000ad857600080fd5b50565b611dc68062000aeb6000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80638f37c6a51161011a578063d3df8aa4116100ad578063dee1f0e41161007c578063dee1f0e41461041d578063e945cdcd14610430578063f77c479114610443578063fbfa77cf14610458578063ffa1ad741461046957600080fd5b8063d3df8aa4146103f8578063d6048df514610405578063db6204851461040d578063dd8825871461041557600080fd5b8063b429afeb116100e9578063b429afeb146103c2578063bfd131f1146103d5578063c2b18aa0146103dd578063ce8c42e8146103e557600080fd5b80638f37c6a51461036157806397c402c41461039d57806398fc9cfd146103b2578063a24ae888146103ba57600080fd5b806359356c5c1161019257806371a973051161016157806371a97305146103285780637a5c08ae1461033d57806386e3ff75146103455780638d9344851461035857600080fd5b806359356c5c146102a55780636c1a3667146102ad5780636edd5446146102c85780636f307dc31461031157600080fd5b80634a8cfa69116101ce5780634a8cfa691461027e5780634bde38c8146102865780634fa5d854146102955780635641ec031461029d57600080fd5b80631113ef521461020057806316f0115b14610215578063325a19f11461024557806345d01e4a14610276575b600080fd5b61021361020e366004611a76565b61048d565b005b600654610228906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b7f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a545b60405190815260200161023c565b610268610564565b610213610584565b600460405161023c9190611c12565b610213610646565b61021361075d565b6102686107d0565b61022873c8bd86e5a132ac0bf10134e270de06a8ba317bfe81565b6103046040518060400160405280601881526020017f5761756c74537472617465677946756c6c4275796261636b000000000000000081525081565b60405161023c9190611c3a565b6000546201000090046001600160a01b0316610228565b610330610852565b60405161023c9190611b8d565b6102686108b4565b610268610353366004611b14565b610943565b61026860075481565b61038d61036f366004611a3e565b6001600160a01b031660009081526002602052604090205460ff1690565b604051901515815260200161023c565b6103a56109f0565b60405161023c9190611bda565b600354610268565b610268610a4f565b61038d6103d0366004611a3e565b610c6a565b610213610c9d565b610330610d3a565b6102136103f3366004611b14565b610d9a565b60045461038d9060ff1681565b6103a5610e6a565b610213610f15565b610268610f7d565b61038d61042b366004611a3e565b610fb8565b61021361043e366004611a3e565b61105a565b600080516020611d7183398151915254610228565b6001546001600160a01b0316610228565b610304604051806040016040528060058152602001640312e302e360dc1b81525081565b336104a4600080516020611d718339815191525490565b6001600160a01b0316146104f05760405162461bcd60e51b815260206004820152600e60248201526d3737ba1031b7b73a3937b63632b960911b60448201526064015b60405180910390fd5b6001600160a01b03821660009081526002602052604090205460ff161561054b5760405162461bcd60e51b815260206004820152600f60248201526e6e6f742073616c7661676561626c6560881b60448201526064016104e7565b61055f6001600160a01b038316848361113f565b505050565b600061057f6105716107d0565b6105796108b4565b906111a2565b905090565b6001546001600160a01b03163314806105bd5750600080516020611d71833981519152546001600160a01b0316336001600160a01b0316145b806105cc57506105cc33610fb8565b6105e85760405162461bcd60e51b81526004016104e790611c6d565b60045460ff16156106245760405162461bcd60e51b81526020600482015260066024820152651c185d5cd95960d21b60448201526064016104e7565b600061062e6107d0565b11156106445761064461063f6107d0565b6111b5565b565b60045460ff16156106825760405162461bcd60e51b81526020600482015260066024820152651c185d5cd95960d21b60448201526064016104e7565b6001546001600160a01b03163314806106bb5750600080516020611d71833981519152546001600160a01b0316336001600160a01b0316145b806106ca57506106ca33610fb8565b6106e65760405162461bcd60e51b81526004016104e790611c6d565b6106ee610584565b60065460075460405163379607f560e01b81526001600160a01b039092169163379607f5916107239160040190815260200190565b600060405180830381600087803b15801561073d57600080fd5b505af1158015610751573d6000803e3d6000fd5b50505050610644611271565b61076633610c6a565b80610775575061077533610fb8565b6107b95760405162461bcd60e51b81526020600482015260156024820152743737ba1031b7b73a3937b63632b91037b91033b7bb60591b60448201526064016104e7565b6107c1611279565b6004805460ff19166001179055565b600080546040516370a0823160e01b8152306004820152620100009091046001600160a01b0316906370a08231906024015b60206040518083038186803b15801561081a57600080fd5b505afa15801561082e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057f9190611b2c565b606060098054806020026020016040519081016040528092919081815260200182805480156108aa57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161088c575b5050505050905090565b6006546007546040516393f1a40b60e01b815260048101919091523060248201526000916001600160a01b0316906393f1a40b9060440160606040518083038186803b15801561090357600080fd5b505afa158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190611b44565b509092915050565b60006005828154811061096657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156109b257600080fd5b505afa1580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ea9190611b2c565b92915050565b6040805160018082528183019092526060916000919060208083019080368337019050509050610a1e610a4f565b81600081518110610a3f57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152919050565b600654600754604051631526fe2760e01b81526004810191909152600091829182916001600160a01b031690631526fe279060240160806040518083038186803b158015610a9c57600080fd5b505afa158015610ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad49190611ad6565b50925092505060008143610ae89190611ce7565b90506000600660009054906101000a90046001600160a01b03166001600160a01b03166385cd4c416040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3a57600080fd5b505afa158015610b4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b729190611b2c565b90506000600660009054906101000a90046001600160a01b03166001600160a01b03166317caf6f16040518163ffffffff1660e01b815260040160206040518083038186803b158015610bc457600080fd5b505afa158015610bd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfc9190611b2c565b90506000610c1e82610c1888610c128888611293565b90611293565b9061129f565b90506005670de0b6b3a764000081610c40876980124610f0445a000000611ca8565b610c4a9190611ca8565b610c549084611cc8565b610c5e9190611ca8565b97505050505050505090565b6000610c82600080516020611d718339815191525490565b6001600160a01b0316826001600160a01b0316149050919050565b6001546001600160a01b0316331480610cd65750600080516020611d71833981519152546001600160a01b0316336001600160a01b0316145b80610ce55750610ce533610fb8565b610d015760405162461bcd60e51b81526004016104e790611c6d565b610d096112ab565b600154610644906001600160a01b0316610d216107d0565b6000546201000090046001600160a01b0316919061113f565b606060058054806020026020016040519081016040528092919081815260200182805480156108aa576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161088c575050505050905090565b6001546001600160a01b0316331480610dd35750600080516020611d71833981519152546001600160a01b0316336001600160a01b0316145b80610de25750610de233610fb8565b610dfe5760405162461bcd60e51b81526004016104e790611c6d565b610e066107d0565b811115610e44576000610e21610e1a6107d0565b83906112c6565b90506000610e36610e306108b4565b836112d2565b9050610e41816112e8565b50505b600154600054610e67916001600160a01b0362010000909204821691168361113f565b50565b604080516001808252818301909252606091600091906020808301908036833701905050600654600754604051637e0246cf60e01b815260048101919091523060248201529192506001600160a01b031690637e0246cf9060440160206040518083038186803b158015610edd57600080fd5b505afa158015610ef1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1e9190611b2c565b610f1e33610c6a565b80610f2d5750610f2d33610fb8565b610f715760405162461bcd60e51b81526020600482015260156024820152743737ba1031b7b73a3937b63632b91037b91033b7bb60591b60448201526064016104e7565b6004805460ff19169055565b600080546006546040516370a0823160e01b81526001600160a01b0391821660048201526201000090920416906370a0823190602401610802565b6000816001600160a01b0316610fda600080516020611d718339815191525490565b6001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561101257600080fd5b505afa158015611026573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104a9190611a5a565b6001600160a01b03161492915050565b600054610100900460ff1680611073575060005460ff16155b6110d65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104e7565b600054610100900460ff161580156110f8576000805461ffff19166101011790555b6111018261132b565b611129427f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a55565b801561113b576000805461ff00191690555b5050565b6040516001600160a01b03831660248201526044810182905261055f90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526113db565b60006111ae8284611c90565b9392505050565b600654600080546111da926001600160a01b03620100009092048216929116906114ad565b6006546000546111fd916001600160a01b036201000090920482169116836114ad565b6006546007546040516321d0683360e11b8152600481019190915260248101839052600060448201526001600160a01b03909116906343a0d066906064015b600060405180830381600087803b15801561125657600080fd5b505af115801561126a573d6000803e3d6000fd5b5050505050565b6106446115d1565b60006112836108b4565b90508015610e6757610e6761185d565b60006111ae8284611cc8565b60006111ae8284611ca8565b60006112b56108b4565b90508015610e6757610e67816112e8565b60006111ae8284611ce7565b60008183106112e157816111ae565b5090919050565b6006546007546040516333cfcd3b60e01b8152600481019190915260248101839052600160448201526001600160a01b03909116906333cfcd3b9060640161123c565b6001600160a01b0381166113705760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016104e7565b7f19b7d592cea0dfda222f6a4ea5c5a8d018ee9c6b1d0a917483a405de94eb26cd6113a7600080516020611d718339815191525490565b604080516001600160a01b03928316815291841660208301520160405180910390a1600080516020611d7183398151915255565b6000611430826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118c69092919063ffffffff16565b80519091501561055f578080602001905181019061144e9190611ab6565b61055f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104e7565b8015806115365750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156114fc57600080fd5b505afa158015611510573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115349190611b2c565b155b6115a15760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016104e7565b6040516001600160a01b03831660248201526044810182905261055f90849063095ea7b360e01b9060640161116b565b60006115e9600080516020611d718339815191525490565b6001600160a01b031663ae28d1286040518163ffffffff1660e01b815260040160206040518083038186803b15801561162157600080fd5b505afa158015611635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116599190611a5a565b905060005b60055481101561113b57600061167382610943565b905060006005838154811061169857634e487b7160e01b600052603260045260246000fd5b60009182526020822001546001600160a01b031691506116bb90829086906114ad565b6116cf6001600160a01b03821685846114ad565b60015460405163451353f160e01b8152600481018490526001600160a01b038381166024830152918216604482015260009186169063451353f190606401602060405180830381600087803b15801561172757600080fd5b505af115801561173b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175f9190611b2c565b9050801561184757600080516020611d71833981519152546001600160a01b03166347b03bba6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117af57600080fd5b505afa1580156117c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e79190611a5a565b6001600160a01b031663f1e84e00826040518263ffffffff1660e01b815260040161181491815260200190565b600060405180830381600087803b15801561182e57600080fd5b505af1158015611842573d6000803e3d6000fd5b505050505b505050808061185590611d2a565b91505061165e565b600654600754604051632989754760e11b81526001600160a01b0390921691635312ea8e916118929160040190815260200190565b600060405180830381600087803b1580156118ac57600080fd5b505af11580156118c0573d6000803e3d6000fd5b50505050565b60606118d584846000856118dd565b949350505050565b60608247101561193e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104e7565b843b61198c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104e7565b600080866001600160a01b031685876040516119a89190611b71565b60006040518083038185875af1925050503d80600081146119e5576040519150601f19603f3d011682016040523d82523d6000602084013e6119ea565b606091505b50915091506119fa828286611a05565b979650505050505050565b60608315611a145750816111ae565b825115611a245782518084602001fd5b8160405162461bcd60e51b81526004016104e79190611c3a565b600060208284031215611a4f578081fd5b81356111ae81611d5b565b600060208284031215611a6b578081fd5b81516111ae81611d5b565b600080600060608486031215611a8a578182fd5b8335611a9581611d5b565b92506020840135611aa581611d5b565b929592945050506040919091013590565b600060208284031215611ac7578081fd5b815180151581146111ae578182fd5b60008060008060808587031215611aeb578081fd5b8451611af681611d5b565b60208601516040870151606090970151919890975090945092505050565b600060208284031215611b25578081fd5b5035919050565b600060208284031215611b3d578081fd5b5051919050565b600080600060608486031215611b58578283fd5b8351925060208401519150604084015190509250925092565b60008251611b83818460208701611cfe565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611bce5783516001600160a01b031683529284019291840191600101611ba9565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611bce57835183529284019291840191600101611bf6565b6020810160058310611c3457634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260008251806020840152611c59816040850160208701611cfe565b601f01601f19169190910160400192915050565b6020808252600990820152683337b93134b23232b760b91b604082015260600190565b60008219821115611ca357611ca3611d45565b500190565b600082611cc357634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611ce257611ce2611d45565b500290565b600082821015611cf957611cf9611d45565b500390565b60005b83811015611d19578181015183820152602001611d01565b838111156118c05750506000910152565b6000600019821415611d3e57611d3e611d45565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610e6757600080fdfe5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c3617a2646970667358221220fbd87bf36e5ebbefc87bca313110a09d9b738886d84d9bcd74f08165e1f771fa64736f6c634300080400335165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c36176f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a";

export class StrategyWaultLp__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _controller: string,
    _vault: string,
    _underlying: string,
    _token0: string,
    _token1: string,
    _poolId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StrategyWaultLp> {
    return super.deploy(
      _controller,
      _vault,
      _underlying,
      _token0,
      _token1,
      _poolId,
      overrides || {}
    ) as Promise<StrategyWaultLp>;
  }
  getDeployTransaction(
    _controller: string,
    _vault: string,
    _underlying: string,
    _token0: string,
    _token1: string,
    _poolId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _controller,
      _vault,
      _underlying,
      _token0,
      _token1,
      _poolId,
      overrides || {}
    );
  }
  attach(address: string): StrategyWaultLp {
    return super.attach(address) as StrategyWaultLp;
  }
  connect(signer: Signer): StrategyWaultLp__factory {
    return super.connect(signer) as StrategyWaultLp__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyWaultLpInterface {
    return new utils.Interface(_abi) as StrategyWaultLpInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StrategyWaultLp {
    return new Contract(address, _abi, signerOrProvider) as StrategyWaultLp;
  }
}
