/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RewardToken, RewardTokenInterface } from "../RewardToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "HARD_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTING_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "_log2",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWeek",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTotalSupplyForCurrentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingEndTs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingStartTs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620016c4380380620016c4833981016040819052620000349162000216565b6200004c670de0b6b3a7640000633b9aca0062000246565b60408051808201825260118152702a22aa2a902932bbb0b932102a37b5b2b760791b6020808301918252835180850190945260048452635445545560e01b908401528151919291620000a19160039162000170565b508051620000b790600490602084019062000170565b50505060008111620001105760405162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a206361702069732030000000000000000000000060448201526064015b60405180910390fd5b6080526001600160a01b0381166200015a5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b604482015260640162000107565b60601b6001600160601b03191660a052620002af565b8280546200017e9062000272565b90600052602060002090601f016020900481019282620001a25760008555620001ed565b82601f10620001bd57805160ff1916838001178555620001ed565b82800160010185558215620001ed579182015b82811115620001ed578251825591602001919060010190620001d0565b50620001fb929150620001ff565b5090565b5b80821115620001fb576000815560010162000200565b60006020828403121562000228578081fd5b81516001600160a01b03811681146200023f578182fd5b9392505050565b60008160001904831182151516156200026d57634e487b7160e01b81526011600452602481fd5b500290565b600181811c908216806200028757607f821691505b60208210811415620002a957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160601c6113d7620002ed600039600081816102b30152818161056101526108930152600081816101dc015261103f01526113d76000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80636b865396116100c357806395d89b411161007c57806395d89b41146102ed5780639a65ea26146102f5578063a457c2d7146102fd578063a9059cbb14610310578063dd62ed3e14610323578063e5ff4ef51461035c57600080fd5b80636b8653961461024e57806370a082311461025757806379cc679014610280578063805397c814610293578063816a0514146102a65780638da5cb5b146102ae57600080fd5b8063355274ea11610115578063355274ea146101da57806339509351146102005780633a03171c1461021357806340c10f191461021b57806342966c68146102305780634d625e721461024357600080fd5b806306575c891461015d57806306fdde0314610178578063095ea7b31461018d57806318160ddd146101b057806323b872dd146101b8578063313ce567146101cb575b600080fd5b610165610365565b6040519081526020015b60405180910390f35b6101806103aa565b60405161016f919061128f565b6101a061019b36600461124e565b61043c565b604051901515815260200161016f565b600254610165565b6101a06101c6366004611213565b610452565b6040516012815260200161016f565b7f0000000000000000000000000000000000000000000000000000000000000000610165565b6101a061020e36600461124e565b610501565b61016561053d565b61022e61022936600461124e565b610556565b005b61022e61023e366004611277565b6105c8565b610165630786156081565b61016560065481565b6101656102653660046111c7565b6001600160a01b031660009081526020819052604090205490565b61022e61028e36600461124e565b6105d5565b6101656102a1366004611277565b61065b565b610165610772565b6102d57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161016f565b610180610879565b61022e610888565b6101a061030b36600461124e565b610955565b6101a061031e36600461124e565b6109ee565b6101656103313660046111e1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61016560055481565b6000600554600014156103785750600090565b6103a5600161039f62093a80610399600554426109fb90919063ffffffff16565b90610a0e565b90610a1a565b905090565b6060600380546103b990611350565b80601f01602080910402602001604051908101604052809291908181526020018280546103e590611350565b80156104325780601f1061040757610100808354040283529160200191610432565b820191906000526020600020905b81548152906001019060200180831161041557829003601f168201915b5050505050905090565b6000610449338484610a26565b50600192915050565b600061045f848484610b4a565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104e95760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104f68533858403610a26565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104499185906105389086906112e2565b610a26565b610553670de0b6b3a7640000633b9aca0061131a565b81565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105ba5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016104e0565b6105c48282610d24565b5050565b6105d23382610d2e565b50565b60006105e18333610331565b90508181101561063f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016104e0565b61064c8333848403610a26565b6106568383610d2e565b505050565b6000670de0b6b3a76400008210156106b55760405162461bcd60e51b815260206004820181905260248201527f6c6f6720696e7075742073686f756c642062652067726561746572203165313860448201526064016104e0565b60006106d16106cc670de0b6b3a7640000856112fa565b610e88565b905060006106e7670de0b6b3a76400008361131a565b905083821c670de0b6b3a764000081141561070457509392505050565b6706f05b59d3b200005b801561076857670de0b6b3a7640000610727838061131a565b61073191906112fa565b9150610746670de0b6b3a7640000600261131a565b82106107605761075681846112e2565b9250600182901c91505b60011c61070e565b5090949350505050565b60008061078662093a8063078615606112fa565b9050600061079b82610796610365565b610f74565b9050806107ab5760009250505090565b6107bc62093a8063078615606112fa565b81106107df576107d8670de0b6b3a7640000633b9aca0061131a565b9250505090565b60006108016102a1670de0b6b3a76400006107fb866001610a1a565b90610f8a565b905060008161081c670de0b6b3a7640000633b9aca0061131a565b61082691906112fa565b905060006108446102a1670de0b6b3a76400006107fb876001610a1a565b905060006108528383610f8a565b905061086e81610796670de0b6b3a7640000633b9aca0061131a565b965050505050505090565b6060600480546103b990611350565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108ec5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016104e0565b6005541561093c5760405162461bcd60e51b815260206004820152601760248201527f6d696e74696e6720616c7265616479207374617274656400000000000000000060448201526064016104e0565b426005819055610950906307861560610a1a565b600655565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156109d75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e0565b6109e43385858403610a26565b5060019392505050565b6000610449338484610b4a565b6000610a078284611339565b9392505050565b6000610a0782846112fa565b6000610a0782846112e2565b6001600160a01b038316610a885760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e0565b6001600160a01b038216610ae95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610bae5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e0565b6001600160a01b038216610c105760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e0565b610c1b838383610f96565b6001600160a01b03831660009081526020819052604090205481811015610c935760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e0565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610cca9084906112e2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d1691815260200190565b60405180910390a350505050565b6105c4828261103d565b6001600160a01b038216610d8e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104e0565b610d9a82600083610f96565b6001600160a01b03821660009081526020819052604090205481811015610e0e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104e0565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610e3d908490611339565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6000600160801b8210610ea857608091821c91610ea590826112e2565b90505b680100000000000000008210610ecb57604091821c91610ec890826112e2565b90505b6401000000008210610eea57602091821c91610ee790826112e2565b90505b620100008210610f0757601091821c91610f0490826112e2565b90505b6101008210610f2357600891821c91610f2090826112e2565b90505b60108210610f3e57600491821c91610f3b90826112e2565b90505b60048210610f5957600291821c91610f5690826112e2565b90505b60028210610f6f57610f6c6001826112e2565b90505b919050565b6000818310610f835781610a07565b5090919050565b6000610a07828461131a565b6001600160a01b03831661065657600554610fe95760405162461bcd60e51b81526020600482015260136024820152721b5a5b9d1a5b99c81b9bdd081cdd185c9d1959606a1b60448201526064016104e0565b610ff1610772565b610ffe8261039f60025490565b11156106565760405162461bcd60e51b815260206004820152600e60248201526d1b1a5b5a5d08195e18d95959195960921b60448201526064016104e0565b7f00000000000000000000000000000000000000000000000000000000000000008161106860025490565b61107291906112e2565b11156110c05760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a206361702065786365656465640000000000000060448201526064016104e0565b6105c482826001600160a01b03821661111b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e0565b61112760008383610f96565b806002600082825461113991906112e2565b90915550506001600160a01b038216600090815260208190526040812080548392906111669084906112e2565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610f6f57600080fd5b6000602082840312156111d8578081fd5b610a07826111b0565b600080604083850312156111f3578081fd5b6111fc836111b0565b915061120a602084016111b0565b90509250929050565b600080600060608486031215611227578081fd5b611230846111b0565b925061123e602085016111b0565b9150604084013590509250925092565b60008060408385031215611260578182fd5b611269836111b0565b946020939093013593505050565b600060208284031215611288578081fd5b5035919050565b6000602080835283518082850152825b818110156112bb5785810183015185820160400152820161129f565b818111156112cc5783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156112f5576112f561138b565b500190565b60008261131557634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156113345761133461138b565b500290565b60008282101561134b5761134b61138b565b500390565b600181811c9082168061136457607f821691505b6020821081141561138557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212206f2033479e1070ace3cfb05569827a3aea15866248ddba00ff8131d7f18dbe2564736f6c63430008040033";

export class RewardToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardToken> {
    return super.deploy(_owner, overrides || {}) as Promise<RewardToken>;
  }
  getDeployTransaction(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  attach(address: string): RewardToken {
    return super.attach(address) as RewardToken;
  }
  connect(signer: Signer): RewardToken__factory {
    return super.connect(signer) as RewardToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardTokenInterface {
    return new utils.Interface(_abi) as RewardTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardToken {
    return new Contract(address, _abi, signerOrProvider) as RewardToken;
  }
}
