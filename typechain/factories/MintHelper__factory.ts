/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MintHelper, MintHelperInterface } from "../MintHelper";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "funds",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "fractions",
        type: "uint256[]",
      },
    ],
    name: "FundsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldValue",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newValue",
        type: "address",
      },
    ],
    name: "UpdateController",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIRST_NETWORK_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FUNDS_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_NETWORK_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "created",
    outputs: [
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "devFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "devFundsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "devFundsList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_funds",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fundsFractions",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "initializeControllable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "isGovernance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_distributor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_otherNetworkFund",
        type: "address",
      },
      {
        internalType: "bool",
        name: "mintAllAvailable",
        type: "bool",
      },
    ],
    name: "mintAndDistribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_funds",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fractions",
        type: "uint256[]",
      },
    ],
    name: "setDevFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061003c60017f5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c36186100e4565b7f5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c36171461007857634e487b7160e01b600052600160045260246000fd5b6100a360017f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8b6100e4565b7f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a146100df57634e487b7160e01b600052600160045260246000fd5b610107565b60008282101561010257634e487b7160e01b81526011600452602481fd5b500390565b6115b6806101166000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063d6f7080c116100a2578063e945cdcd11610071578063e945cdcd14610231578063f77c479114610244578063fc0c546a14610259578063ff1d575214610261578063ffa1ad741461027457600080fd5b8063d6f7080c14610205578063dd1dc3251461020d578063dee1f0e414610216578063e004a9b21461022957600080fd5b80633f5936d3116100e95780633f5936d31461019e578063657d09da146101a657806373e945f6146101af578063b3f37903146101cf578063b429afeb146101e257600080fd5b80630417c5f51461011b5780630f7fdb23146101375780631c5bc6ad1461014c578063325a19f114610177575b600080fd5b61012461271081565b6040519081526020015b60405180910390f35b61014a61014536600461122c565b6102a5565b005b61015f61015a36600461128d565b61063a565b6040516001600160a01b03909116815260200161012e565b7f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a54610124565b600254610124565b610124610bb881565b6101246101bd366004611181565b60016020526000908152604090205481565b61014a6101dd3660046112bd565b610664565b6101f56101f0366004611181565b610c4c565b604051901515815260200161012e565b610124606481565b610124611b5881565b6101f5610224366004611181565b610c7f565b610124602181565b61014a61023f366004611181565b610d21565b6000805160206115618339815191525461015f565b61015f610dbf565b61014a61026f3660046111b9565b610e4c565b610298604051806040016040528060058152602001640312e302e360dc1b81525081565b60405161012e9190611389565b6102ae33610c4c565b806102bd57506102bd33610c7f565b6103065760405162461bcd60e51b81526020600482015260156024820152743737ba1031b7b73a3937b63632b91037b91033b7bb60591b60448201526064015b60405180910390fd5b81516103425760405162461bcd60e51b815260206004820152600b60248201526a656d7074792066756e647360a81b60448201526064016102fd565b80518251146103805760405162461bcd60e51b815260206004820152600a60248201526977726f6e672073697a6560b01b60448201526064016102fd565b610388610ece565b6000805b83518110156105b25760006001600160a01b03168482815181106103c057634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152601760248201527f416464726573732073686f756c64206e6f74206265203000000000000000000060448201526064016102fd565b82818151811061043f57634e487b7160e01b600052603260045260246000fd5b60200260200101516000141561048f5760405162461bcd60e51b81526020600482015260156024820152740526174696f2073686f756c64206e6f74206265203605c1b60448201526064016102fd565b6104c98382815181106104b257634e487b7160e01b600052603260045260246000fd5b602002602001015183610fc590919063ffffffff16565b91508281815181106104eb57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600086848151811061051757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550600284828151811061056557634e487b7160e01b600052603260045260246000fd5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b03909216919091179055806105aa81611504565b91505061038c565b50610bb881146105fc5760405162461bcd60e51b81526020600482015260156024820152743bb937b7339039bab69037b310333930b1ba34b7b760591b60448201526064016102fd565b7f794fe5fcb63f948e8910af3a3182c1b7a7cc592d33582600c11d5bb6a949c3f2838360405161062d929190611313565b60405180910390a1505050565b6002818154811061064a57600080fd5b6000918252602090912001546001600160a01b0316905081565b3361067b6000805160206115618339815191525490565b6001600160a01b0316146106c25760405162461bcd60e51b815260206004820152600e60248201526d3737ba1031b7b73a3937b63632b960911b60448201526064016102fd565b831515806106cd5750805b6107195760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e742073686f756c642062652067726561746572207468616e20300060448201526064016102fd565b6000610723610dbf565b6001600160a01b0316141561076b5760405162461bcd60e51b815260206004820152600e60248201526d151bdad95b881b9bdd081a5b9a5d60921b60448201526064016102fd565b610773610dbf565b6001600160a01b031663e5ff4ef56040518163ffffffff1660e01b815260040160206040518083038186803b1580156107ab57600080fd5b505afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e391906112a5565b610842576107ef610dbf565b6001600160a01b0316639a65ea266040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561082957600080fd5b505af115801561083d573d6000803e3d6000fd5b505050505b801561099e5783156108a25760405162461bcd60e51b8152602060048201526024808201527f757365207a65726f20616d6f756e7420666f72206d696e74416c6c417661696c60448201526361626c6560e01b60648201526084016102fd565b61099b6108ad610dbf565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108e557600080fd5b505afa1580156108f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091d91906112a5565b610925610dbf565b6001600160a01b031663816a05146040518163ffffffff1660e01b815260040160206040518083038186803b15801561095d57600080fd5b505afa158015610971573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099591906112a5565b90610fd8565b93505b60006109b660646109b0876021610fe4565b90610ff0565b905060006109c48683610fd8565b90506109ce610dbf565b6040516340c10f1960e01b81526001600160a01b0386811660048301526024820184905291909116906340c10f1990604401600060405180830381600087803b158015610a1a57600080fd5b505af1158015610a2e573d6000803e3d6000fd5b505050506000610a4f6127106109b0611b5886610fe490919063ffffffff16565b9050610a59610dbf565b6040516340c10f1960e01b81526001600160a01b0388811660048301526024820184905291909116906340c10f1990604401600060405180830381600087803b158015610aa557600080fd5b505af1158015610ab9573d6000803e3d6000fd5b5083925060009150505b600254811015610c0057600060028281548110610af057634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031680835260019091526040822054909250610b2a90612710906109b0908a90610fe4565b600254909150610b4290600190610995908a90610fd8565b610b4c8583610fc5565b118015610b61575086610b5f8583610fc5565b105b15610b7357610b708785610fd8565b90505b610b7d8482610fc5565b9350610b87610dbf565b6040516340c10f1960e01b81526001600160a01b0384811660048301526024820184905291909116906340c10f1990604401600060405180830381600087803b158015610bd357600080fd5b505af1158015610be7573d6000803e3d6000fd5b5050505050508080610bf890611504565b915050610ac3565b50838114610c425760405162461bcd60e51b815260206004820152600f60248201526e77726f6e6720636865636b2073756d60881b60448201526064016102fd565b5050505050505050565b6000610c646000805160206115618339815191525490565b6001600160a01b0316826001600160a01b0316149050919050565b6000816001600160a01b0316610ca16000805160206115618339815191525490565b6001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610cd957600080fd5b505afa158015610ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d11919061119d565b6001600160a01b03161492915050565b600054610100900460ff1680610d3a575060005460ff16155b610d565760405162461bcd60e51b81526004016102fd906113dc565b600054610100900460ff16158015610d78576000805461ffff19166101011790555b610d8182610ffc565b610da9427f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a55565b8015610dbb576000805461ff00191690555b5050565b6000610dd76000805160206115618339815191525490565b6001600160a01b031663f7c618c16040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0f57600080fd5b505afa158015610e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e47919061119d565b905090565b600054610100900460ff1680610e65575060005460ff16155b610e815760405162461bcd60e51b81526004016102fd906113dc565b600054610100900460ff16158015610ea3576000805461ffff19166101011790555b610eac84610d21565b610eb683836102a5565b8015610ec8576000805461ff00191690555b50505050565b6002545b8015610fc257600160006002610ee883856114d6565b81548110610f0657634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040018120556002610f386001836114d6565b81548110610f5657634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b03191690556002805480610f8e57634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b031916905501905580610fba816114ed565b915050610ed2565b50565b6000610fd1828461147f565b9392505050565b6000610fd182846114d6565b6000610fd182846114b7565b6000610fd18284611497565b6001600160a01b0381166110415760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016102fd565b7f19b7d592cea0dfda222f6a4ea5c5a8d018ee9c6b1d0a917483a405de94eb26cd6110786000805160206115618339815191525490565b604080516001600160a01b03928316815291841660208301520160405180910390a160008051602061156183398151915255565b600082601f8301126110bc578081fd5b813560206110d16110cc8361145b565b61142a565b80838252828201915082860187848660051b89010111156110f0578586fd5b855b858110156111175781356111058161154b565b845292840192908401906001016110f2565b5090979650505050505050565b600082601f830112611134578081fd5b813560206111446110cc8361145b565b80838252828201915082860187848660051b8901011115611163578586fd5b855b8581101561111757813584529284019290840190600101611165565b600060208284031215611192578081fd5b8135610fd18161154b565b6000602082840312156111ae578081fd5b8151610fd18161154b565b6000806000606084860312156111cd578182fd5b83356111d88161154b565b9250602084013567ffffffffffffffff808211156111f4578384fd5b611200878388016110ac565b93506040860135915080821115611215578283fd5b5061122286828701611124565b9150509250925092565b6000806040838503121561123e578182fd5b823567ffffffffffffffff80821115611255578384fd5b611261868387016110ac565b93506020850135915080821115611276578283fd5b5061128385828601611124565b9150509250929050565b60006020828403121561129e578081fd5b5035919050565b6000602082840312156112b6578081fd5b5051919050565b600080600080608085870312156112d2578081fd5b8435935060208501356112e48161154b565b925060408501356112f48161154b565b915060608501358015158114611308578182fd5b939692955090935050565b604080825283519082018190526000906020906060840190828701845b828110156113555781516001600160a01b031684529284019290840190600101611330565b50505083810382850152845180825285830191830190845b818110156111175783518352928401929184019160010161136d565b6000602080835283518082850152825b818110156113b557858101830151858201604001528201611399565b818111156113c65783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561145357611453611535565b604052919050565b600067ffffffffffffffff82111561147557611475611535565b5060051b60200190565b600082198211156114925761149261151f565b500190565b6000826114b257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156114d1576114d161151f565b500290565b6000828210156114e8576114e861151f565b500390565b6000816114fc576114fc61151f565b506000190190565b60006000198214156115185761151861151f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610fc257600080fdfe5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c3617a26469706673582212202992e96a357168ef8b8eb3fba8ebd1934fa2ae1f64e6110436af0f4a2f90d31664736f6c63430008040033";

export class MintHelper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MintHelper> {
    return super.deploy(overrides || {}) as Promise<MintHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MintHelper {
    return super.attach(address) as MintHelper;
  }
  connect(signer: Signer): MintHelper__factory {
    return super.connect(signer) as MintHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintHelperInterface {
    return new utils.Interface(_abi) as MintHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintHelper {
    return new Contract(address, _abi, signerOrProvider) as MintHelper;
  }
}
