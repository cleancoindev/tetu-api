/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockStrategySelfFarm,
  MockStrategySelfFarmInterface,
} from "../MockStrategySelfFarm";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "__underlying",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "__assets",
        type: "address[]",
      },
      {
        internalType: "enum IStrategy.Platform",
        name: "__platform",
        type: "uint8",
      },
      {
        internalType: "address[]",
        name: "__rewards",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldValue",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newValue",
        type: "address",
      },
    ],
    name: "UpdateController",
    type: "event",
  },
  {
    inputs: [],
    name: "STRATEGY_TYPE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyBackRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "continueInvesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "created",
    outputs: [
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "doHardWork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "initializeControllable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investAllUnderlying",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investedUnderlyingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "isGovernance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pausedInvesting",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platform",
    outputs: [
      {
        internalType: "enum IStrategy.Platform",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolWeeklyRewardsAmount",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readyToClaim",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardTokenIdx",
        type: "uint256",
      },
    ],
    name: "rewardBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPoolBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "salvage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "unsalvageableTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526004805460ff191690553480156200001b57600080fd5b50604051620027e1380380620027e18339810160408190526200003e91620006e1565b868487836127106200007260017f5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c3618620007ab565b600080516020620027a1833981519152146200009e57634e487b7160e01b600052600160045260246000fd5b620000cb60017f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8b620007ab565b600080516020620027c183398151915214620000f757634e487b7160e01b600052600160045260246000fd5b6200010d85620003de60201b620011b01760201c565b6000805462010000600160b01b031916620100006001600160a01b038781169190910291909117909155600180546001600160a01b0319169185169190911790558151620001639060059060208501906200056f565b50600381905560005b600554811015620001e857600160026000600584815481106200019f57634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff191691151591909117905580620001df81620007c5565b9150506200016c565b5050506001600160a01b039182166000908152600260205260409020805460ff1916600117905550861615159050620002575760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064015b60405180910390fd5b8251620002965760405162461bcd60e51b815260206004820152600c60248201526b656d7074792061737365747360a01b60448201526064016200024e565b600880546001600160a01b0319166001600160a01b0387161790558251620002c69060079060208601906200056f565b506006805483919060ff19166001836004811115620002f557634e487b7160e01b600052602160045260246000fd5b0217905550836001600160a01b0316856001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156200033e57600080fd5b505afa15801562000353573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003799190620006bd565b6001600160a01b031614620003d15760405162461bcd60e51b815260206004820152601560248201527f77726f6e6720706f6f6c20756e6465726c79696e67000000000000000000000060448201526064016200024e565b505050505050506200080f565b600054610100900460ff1680620003f8575060005460ff16155b6200045d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200024e565b600054610100900460ff1615801562000480576000805461ffff19166101011790555b6200048b82620004ba565b620004a342600080516020620027c183398151915255565b8015620004b6576000805461ff00191690555b5050565b6001600160a01b038116620005015760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016200024e565b7f19b7d592cea0dfda222f6a4ea5c5a8d018ee9c6b1d0a917483a405de94eb26cd6200053a600080516020620027a18339815191525490565b604080516001600160a01b03928316815291841660208301520160405180910390a1600080516020620027a183398151915255565b828054828255906000526020600020908101928215620005c7579160200282015b82811115620005c757825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000590565b50620005d5929150620005d9565b5090565b5b80821115620005d55760008155600101620005da565b80516001600160a01b03811681146200060857600080fd5b919050565b600082601f8301126200061e578081fd5b815160206001600160401b03808311156200063d576200063d620007f9565b8260051b604051601f19603f83011681018181108482111715620006655762000665620007f9565b6040528481528381019250868401828801850189101562000684578687fd5b8692505b85831015620006b1576200069c81620005f0565b84529284019260019290920191840162000688565b50979650505050505050565b600060208284031215620006cf578081fd5b620006da82620005f0565b9392505050565b600080600080600080600060e0888a031215620006fc578283fd5b6200070788620005f0565b96506200071760208901620005f0565b95506200072760408901620005f0565b94506200073760608901620005f0565b60808901519094506001600160401b038082111562000754578485fd5b620007628b838c016200060d565b945060a08a015191506005821062000778578384fd5b60c08a0151919350808211156200078d578283fd5b506200079c8a828b016200060d565b91505092959891949750929550565b600082821015620007c057620007c0620007e3565b500390565b6000600019821415620007dc57620007dc620007e3565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b611f82806200081f6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806397c402c411610104578063d6048df5116100a2578063e945cdcd11610071578063e945cdcd146103d6578063f77c4791146103e9578063fbfa77cf146103fe578063ffa1ad741461040f57600080fd5b8063d6048df5146103ab578063db620485146103b3578063dd882587146103bb578063dee1f0e4146103c357600080fd5b8063bfd131f1116100de578063bfd131f11461037b578063c2b18aa014610383578063ce8c42e81461038b578063d3df8aa41461039e57600080fd5b806397c402c41461034b57806398fc9cfd14610360578063b429afeb1461036857600080fd5b80634fa5d8541161017c57806371a973051161014b57806371a97305146102df5780637a5c08ae146102f457806386e3ff75146102fc5780638f37c6a51461030f57600080fd5b80634fa5d854146102b05780635641ec03146102b857806359356c5c146102c05780636f307dc3146102c857600080fd5b8063325a19f1116101b8578063325a19f11461025c57806345d01e4a1461028d5780634a8cfa69146102955780634bde38c81461029d57600080fd5b80631113ef52146101df57806316f0115b146101f45780632c41391914610224575b600080fd5b6101f26101ed366004611bc0565b610433565b005b600854610207906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61024f6040518060400160405280600c81526020016b4d6f636b537472617465677960a01b81525081565b60405161021b9190611de0565b7f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a545b60405190815260200161021b565b61027f61050a565b6101f261052a565b60065460ff1660405161021b9190611db8565b6101f26105ec565b6101f26106a4565b61027f610717565b6000546201000090046001600160a01b0316610207565b6102e7610799565b60405161021b9190611d33565b61027f6107fb565b61027f61030a366004611ce7565b61082c565b61033b61031d366004611b88565b6001600160a01b031660009081526002602052604090205460ff1690565b604051901515815260200161021b565b6103536108d9565b60405161021b9190611d80565b60035461027f565b61033b610376366004611b88565b610c73565b6101f2610ca6565b6102e7610d43565b6101f2610399366004611ce7565b610da3565b60045461033b9060ff1681565b610353610e73565b6101f2611061565b61027f6110c9565b61033b6103d1366004611b88565b61110e565b6101f26103e4366004611b88565b6111b0565b600080516020611f2d83398151915254610207565b6001546001600160a01b0316610207565b61024f604051806040016040528060058152602001640312e302e360dc1b81525081565b3361044a600080516020611f2d8339815191525490565b6001600160a01b0316146104965760405162461bcd60e51b815260206004820152600e60248201526d3737ba1031b7b73a3937b63632b960911b60448201526064015b60405180910390fd5b6001600160a01b03821660009081526002602052604090205460ff16156104f15760405162461bcd60e51b815260206004820152600f60248201526e6e6f742073616c7661676561626c6560881b604482015260640161048d565b6105056001600160a01b0383168483611295565b505050565b6000610525610517610717565b61051f6107fb565b906112f8565b905090565b6001546001600160a01b03163314806105635750600080516020611f2d833981519152546001600160a01b0316336001600160a01b0316145b8061057257506105723361110e565b61058e5760405162461bcd60e51b815260040161048d90611e13565b60045460ff16156105ca5760405162461bcd60e51b81526020600482015260066024820152651c185d5cd95960d21b604482015260640161048d565b60006105d4610717565b11156105ea576105ea6105e5610717565b61130b565b565b60045460ff16156106285760405162461bcd60e51b81526020600482015260066024820152651c185d5cd95960d21b604482015260640161048d565b6001546001600160a01b03163314806106615750600080516020611f2d833981519152546001600160a01b0316336001600160a01b0316145b8061067057506106703361110e565b61068c5760405162461bcd60e51b815260040161048d90611e13565b6106946113b4565b61069c6113cf565b6105ea61052a565b6106ad33610c73565b806106bc57506106bc3361110e565b6107005760405162461bcd60e51b81526020600482015260156024820152743737ba1031b7b73a3937b63632b91037b91033b7bb60591b604482015260640161048d565b6107086113d7565b6004805460ff19166001179055565b600080546040516370a0823160e01b8152306004820152620100009091046001600160a01b0316906370a08231906024015b60206040518083038186803b15801561076157600080fd5b505afa158015610775573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105259190611cff565b606060078054806020026020016040519081016040528092919081815260200182805480156107f157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107d3575b5050505050905090565b600854604051638cb1d67f60e01b81523060048201526000916001600160a01b031690638cb1d67f90602401610749565b60006005828154811061084f57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561089b57600080fd5b505afa1580156108af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d39190611cff565b92915050565b60606000600860009054906101000a90046001600160a01b03166001600160a01b031663c2b18aa06040518163ffffffff1660e01b815260040160006040518083038186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109679190810190611c00565b90506000815167ffffffffffffffff81111561099357634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156109bc578160200160208202803683370190505b50905060005b8251811015610c6c5760008382815181106109ed57634e487b7160e01b600052603260045260246000fd5b60209081029190910101516008546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a082319060240160206040518083038186803b158015610a3c57600080fd5b505afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a749190611cff565b60085485519192506000916001600160a01b0390911690639600e1ed90879086908110610ab157634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b8152600401610ae491906001600160a01b0391909116815260200190565b60206040518083038186803b158015610afc57600080fd5b505afa158015610b10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b349190611cff565b60085486516001600160a01b0390911690633fee85e690889087908110610b6b57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b8152600401610b9e91906001600160a01b0391909116815260200190565b60206040518083038186803b158015610bb657600080fd5b505afa158015610bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bee9190611cff565b610bf89190611e8d565b9050670de0b6b3a7640000610c17826980124610f0445a000000611e4e565b610c219084611e6e565b610c2b9190611e4e565b848481518110610c4b57634e487b7160e01b600052603260045260246000fd5b60200260200101818152505050508080610c6490611ed0565b9150506109c2565b5092915050565b6000610c8b600080516020611f2d8339815191525490565b6001600160a01b0316826001600160a01b0316149050919050565b6001546001600160a01b0316331480610cdf5750600080516020611f2d833981519152546001600160a01b0316336001600160a01b0316145b80610cee5750610cee3361110e565b610d0a5760405162461bcd60e51b815260040161048d90611e13565b610d126113b4565b6001546105ea906001600160a01b0316610d2a610717565b6000546201000090046001600160a01b03169190611295565b606060058054806020026020016040519081016040528092919081815260200182805480156107f1576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116107d3575050505050905090565b6001546001600160a01b0316331480610ddc5750600080516020611f2d833981519152546001600160a01b0316336001600160a01b0316145b80610deb5750610deb3361110e565b610e075760405162461bcd60e51b815260040161048d90611e13565b610e0f610717565b811115610e4d576000610e2a610e23610717565b83906113f1565b90506000610e3f610e396107fb565b836113fd565b9050610e4a81611413565b50505b600154600054610e70916001600160a01b03620100009092048216911683611295565b50565b60606000600860009054906101000a90046001600160a01b03166001600160a01b031663c2b18aa06040518163ffffffff1660e01b815260040160006040518083038186803b158015610ec557600080fd5b505afa158015610ed9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f019190810190611c00565b90506000815167ffffffffffffffff811115610f2d57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610f56578160200160208202803683370190505b50905060005b8251811015610c6c5760085483516001600160a01b039091169063211dc32d90859084908110610f9c57634e487b7160e01b600052603260045260246000fd5b60209081029190910101516040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260440160206040518083038186803b158015610fec57600080fd5b505afa158015611000573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110249190611cff565b82828151811061104457634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061105981611ed0565b915050610f5c565b61106a33610c73565b8061107957506110793361110e565b6110bd5760405162461bcd60e51b81526020600482015260156024820152743737ba1031b7b73a3937b63632b91037b91033b7bb60591b604482015260640161048d565b6004805460ff19169055565b60085460408051630dfc73df60e11b815290516000926001600160a01b031691631bf8e7be916004808301926020929190829003018186803b15801561076157600080fd5b6000816001600160a01b0316611130600080516020611f2d8339815191525490565b6001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561116857600080fd5b505afa15801561117c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a09190611ba4565b6001600160a01b03161492915050565b600054610100900460ff16806111c9575060005460ff16155b61122c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161048d565b600054610100900460ff1615801561124e576000805461ffff19166101011790555b61125782611463565b61127f427f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a55565b8015611291576000805461ff00191690555b5050565b6040516001600160a01b03831660248201526044810182905261050590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611513565b60006113048284611e36565b9392505050565b60085460008054611330926001600160a01b03620100009092048216929116906115e5565b600854600054611353916001600160a01b036201000090920482169116836115e5565b60085460405163b6b55f2560e01b8152600481018390526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b15801561139957600080fd5b505af11580156113ad573d6000803e3d6000fd5b5050505050565b60006113be6107fb565b90508015610e7057610e7081611413565b6105ea611709565b60006113e16107fb565b90508015610e7057610e70611995565b60006113048284611e8d565b600081831061140c5781611304565b5090919050565b600860009054906101000a90046001600160a01b03166001600160a01b031663e9fad8ee6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561139957600080fd5b6001600160a01b0381166114a85760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b604482015260640161048d565b7f19b7d592cea0dfda222f6a4ea5c5a8d018ee9c6b1d0a917483a405de94eb26cd6114df600080516020611f2d8339815191525490565b604080516001600160a01b03928316815291841660208301520160405180910390a1600080516020611f2d83398151915255565b6000611568826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a009092919063ffffffff16565b80519091501561050557808060200190518101906115869190611cc7565b6105055760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161048d565b80158061166e5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561163457600080fd5b505afa158015611648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166c9190611cff565b155b6116d95760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161048d565b6040516001600160a01b03831660248201526044810182905261050590849063095ea7b360e01b906064016112c1565b6000611721600080516020611f2d8339815191525490565b6001600160a01b031663ae28d1286040518163ffffffff1660e01b815260040160206040518083038186803b15801561175957600080fd5b505afa15801561176d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117919190611ba4565b905060005b6005548110156112915760006117ab8261082c565b90506000600583815481106117d057634e487b7160e01b600052603260045260246000fd5b60009182526020822001546001600160a01b031691506117f390829086906115e5565b6118076001600160a01b03821685846115e5565b60015460405163451353f160e01b8152600481018490526001600160a01b038381166024830152918216604482015260009186169063451353f190606401602060405180830381600087803b15801561185f57600080fd5b505af1158015611873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118979190611cff565b9050801561197f57600080516020611f2d833981519152546001600160a01b03166347b03bba6040518163ffffffff1660e01b815260040160206040518083038186803b1580156118e757600080fd5b505afa1580156118fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191f9190611ba4565b6001600160a01b031663f1e84e00826040518263ffffffff1660e01b815260040161194c91815260200190565b600060405180830381600087803b15801561196657600080fd5b505af115801561197a573d6000803e3d6000fd5b505050505b505050808061198d90611ed0565b915050611796565b6008546001600160a01b0316632e1a7d4d6119ae6107fb565b6040518263ffffffff1660e01b81526004016119cc91815260200190565b600060405180830381600087803b1580156119e657600080fd5b505af11580156119fa573d6000803e3d6000fd5b50505050565b6060611a0f8484600085611a17565b949350505050565b606082471015611a785760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161048d565b843b611ac65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161048d565b600080866001600160a01b03168587604051611ae29190611d17565b60006040518083038185875af1925050503d8060008114611b1f576040519150601f19603f3d011682016040523d82523d6000602084013e611b24565b606091505b5091509150611b34828286611b3f565b979650505050505050565b60608315611b4e575081611304565b825115611b5e5782518084602001fd5b8160405162461bcd60e51b815260040161048d9190611de0565b8051611b8381611f17565b919050565b600060208284031215611b99578081fd5b813561130481611f17565b600060208284031215611bb5578081fd5b815161130481611f17565b600080600060608486031215611bd4578182fd5b8335611bdf81611f17565b92506020840135611bef81611f17565b929592945050506040919091013590565b60006020808385031215611c12578182fd5b825167ffffffffffffffff80821115611c29578384fd5b818501915085601f830112611c3c578384fd5b815181811115611c4e57611c4e611f01565b8060051b604051601f19603f83011681018181108582111715611c7357611c73611f01565b604052828152858101935084860182860187018a1015611c91578788fd5b8795505b83861015611cba57611ca681611b78565b855260019590950194938601938601611c95565b5098975050505050505050565b600060208284031215611cd8578081fd5b81518015158114611304578182fd5b600060208284031215611cf8578081fd5b5035919050565b600060208284031215611d10578081fd5b5051919050565b60008251611d29818460208701611ea4565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611d745783516001600160a01b031683529284019291840191600101611d4f565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611d7457835183529284019291840191600101611d9c565b6020810160058310611dda57634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260008251806020840152611dff816040850160208701611ea4565b601f01601f19169190910160400192915050565b6020808252600990820152683337b93134b23232b760b91b604082015260600190565b60008219821115611e4957611e49611eeb565b500190565b600082611e6957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611e8857611e88611eeb565b500290565b600082821015611e9f57611e9f611eeb565b500390565b60005b83811015611ebf578181015183820152602001611ea7565b838111156119fa5750506000910152565b6000600019821415611ee457611ee4611eeb565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e7057600080fdfe5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c3617a26469706673582212208a32b90c8455c6d2543edd00706479d7b6d8540775bb3fda295fa48cc1ff746a64736f6c634300080400335165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c36176f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a";

export class MockStrategySelfFarm__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _controller: string,
    _vault: string,
    _pool: string,
    __underlying: string,
    __assets: string[],
    __platform: BigNumberish,
    __rewards: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockStrategySelfFarm> {
    return super.deploy(
      _controller,
      _vault,
      _pool,
      __underlying,
      __assets,
      __platform,
      __rewards,
      overrides || {}
    ) as Promise<MockStrategySelfFarm>;
  }
  getDeployTransaction(
    _controller: string,
    _vault: string,
    _pool: string,
    __underlying: string,
    __assets: string[],
    __platform: BigNumberish,
    __rewards: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _controller,
      _vault,
      _pool,
      __underlying,
      __assets,
      __platform,
      __rewards,
      overrides || {}
    );
  }
  attach(address: string): MockStrategySelfFarm {
    return super.attach(address) as MockStrategySelfFarm;
  }
  connect(signer: Signer): MockStrategySelfFarm__factory {
    return super.connect(signer) as MockStrategySelfFarm__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStrategySelfFarmInterface {
    return new utils.Interface(_abi) as MockStrategySelfFarmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockStrategySelfFarm {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockStrategySelfFarm;
  }
}
