/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VaultController,
  VaultControllerInterface,
} from "../VaultController";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldValue",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newValue",
        type: "address",
      },
    ],
    name: "UpdateController",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldValue",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newValue",
        type: "address",
      },
    ],
    name: "UpdatedAddressSlot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "UpdatedUint256Slot",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_vaults",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_rt",
        type: "address",
      },
    ],
    name: "addRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_targets",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "_statuses",
        type: "bool[]",
      },
    ],
    name: "changeVaultsStatuses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "created",
    outputs: [
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "initializeControllable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeVaultControllerStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "isGovernance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_vaults",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_rt",
        type: "address",
      },
    ],
    name: "removeRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardBoostDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRatioWithoutBoost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "setRewardBoostDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ratio",
        type: "uint256",
      },
    ],
    name: "setRewardRatioWithoutBoost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "stopVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_vaults",
        type: "address[]",
      },
    ],
    name: "stopVaultsBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061003c60017f5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c36186100e4565b7f5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c36171461007857634e487b7160e01b600052600160045260246000fd5b6100a360017f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8b6100e4565b7f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a146100df57634e487b7160e01b600052600160045260246000fd5b610107565b60008282101561010257634e487b7160e01b81526011600452602481fd5b500390565b6117d580620001176000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063a03de592116100a2578063dee1f0e411610071578063dee1f0e414610208578063e945cdcd1461021b578063f77c47911461022e578063ff88f1f014610256578063ffa1ad741461026957600080fd5b8063a03de592146101b7578063a25c2362146101ca578063b429afeb146101d2578063c4d66de8146101f557600080fd5b80634b389e22116100de5780634b389e22146101765780637871d8b51461017e5780638c121847146101915780639fb41ceb146101a457600080fd5b806307edc1db14610110578063325a19f1146101255780633bc20f881461015b57806342b8322f1461016e575b600080fd5b61012361011e366004611520565b61029a565b005b7f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a545b6040519081526020015b60405180910390f35b6101236101693660046113c3565b61055f565b610123610823565b6101486108a5565b61012361018c366004611402565b6108e4565b61012361019f366004611442565b610963565b6101236101b2366004611442565b610a3e565b6101236101c5366004611497565b610b13565b610148610c65565b6101e56101e03660046113c3565b610c9b565b6040519015158152602001610152565b6101236102033660046113c3565b610cce565b6101e56102163660046113c3565b610d4c565b6101236102293660046113c3565b610dee565b600080516020611780833981519152546040516001600160a01b039091168152602001610152565b610123610264366004611520565b610e76565b61028d604051806040016040528060058152602001640312e302e360dc1b81525081565b60405161015291906115fc565b6102a333610d4c565b6102c85760405162461bcd60e51b81526004016102bf906116ef565b60405180910390fd5b6014816040516020016102dc9291906115e1565b6040516020818303038152906040528051906020012060146102fc610c65565b156000806103166000805160206117808339815191525490565b6001600160a01b0316631d5a897f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561034e57600080fd5b505afa158015610362573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038691906113e6565b9050826104e6576001600160a01b0381166103b35760405162461bcd60e51b81526004016102bf90611656565b60405163e912c12f60e01b8152600481018690526000906001600160a01b0383169063e912c12f90602401602060405180830381600087803b1580156103f857600080fd5b505af115801561040c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104309190611538565b1161044d5760405162461bcd60e51b81526004016102bf9061162f565b60405163e912c12f60e01b81526004810186905242906001600160a01b0383169063e912c12f90602401602060405180830381600087803b15801561049157600080fd5b505af11580156104a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c99190611538565b106104e65760405162461bcd60e51b81526004016102bf906116cc565b6104ef86611104565b826105575760405163f9ae7f4b60e01b81526001600160a01b0382169063f9ae7f4b906105249088908890879060040161158e565b600060405180830381600087803b15801561053e57600080fd5b505af1158015610552573d6000803e3d6000fd5b505050505b505050505050565b61056833610d4c565b6105845760405162461bcd60e51b81526004016102bf906116ef565b6016816040516020016105989291906115bb565b60405160208183030381529060405280519060200120601660008360006105cb6000805160206117808339815191525490565b6001600160a01b0316631d5a897f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561060357600080fd5b505afa158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063b91906113e6565b90508261079b576001600160a01b0381166106685760405162461bcd60e51b81526004016102bf90611656565b60405163e912c12f60e01b8152600481018690526000906001600160a01b0383169063e912c12f90602401602060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e59190611538565b116107025760405162461bcd60e51b81526004016102bf9061162f565b60405163e912c12f60e01b81526004810186905242906001600160a01b0383169063e912c12f90602401602060405180830381600087803b15801561074657600080fd5b505af115801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e9190611538565b1061079b5760405162461bcd60e51b81526004016102bf906116cc565b856001600160a01b03166307da68f56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107d657600080fd5b505af11580156107ea573d6000803e3d6000fd5b50505050826105575760405163f9ae7f4b60e01b81526001600160a01b0382169063f9ae7f4b906105249088908890879060040161158e565b600054610100900460ff168061083c575060005460ff16155b6108585760405162461bcd60e51b81526004016102bf9061167e565b600054610100900460ff1615801561087a576000805461ffff19166101011790555b6108866224ea00611104565b610890601e6111a0565b80156108a2576000805461ff00191690555b50565b60006108df604051806040016040528060178152602001761c995dd85c9914985d1a5bd5da5d1a1bdd5d109bdbdcdd604a1b815250611244565b905090565b6108ed33610d4c565b6109095760405162461bcd60e51b81526004016102bf906116ef565b60005b8181101561095e5761094c83838381811061093757634e487b7160e01b600052603260045260246000fd5b905060200201602081019061016991906113c3565b8061095681611743565b91505061090c565b505050565b61096c33610d4c565b6109885760405162461bcd60e51b81526004016102bf906116ef565b60005b82811015610a38578383828181106109b357634e487b7160e01b600052603260045260246000fd5b90506020020160208101906109c891906113c3565b604051630700f9b360e21b81526001600160a01b0384811660048301529190911690631c03e6cc90602401600060405180830381600087803b158015610a0d57600080fd5b505af1158015610a21573d6000803e3d6000fd5b505050508080610a3090611743565b91505061098b565b50505050565b610a4733610d4c565b610a635760405162461bcd60e51b81526004016102bf906116ef565b60005b82811015610a3857838382818110610a8e57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610aa391906113c3565b604051633d509c9760e01b81526001600160a01b0384811660048301529190911690633d509c9790602401600060405180830381600087803b158015610ae857600080fd5b505af1158015610afc573d6000803e3d6000fd5b505050508080610b0b90611743565b915050610a66565b610b1c33610d4c565b610b385760405162461bcd60e51b81526004016102bf906116ef565b828114610b765760405162461bcd60e51b815260206004820152600c60248201526b77726f6e672061727261797360a01b60448201526064016102bf565b60005b83811015610c5e57848482818110610ba157634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610bb691906113c3565b6001600160a01b03166339448cee848484818110610be457634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610bf99190611500565b6040518263ffffffff1660e01b8152600401610c19911515815260200190565b600060405180830381600087803b158015610c3357600080fd5b505af1158015610c47573d6000803e3d6000fd5b505050508080610c5690611743565b915050610b79565b5050505050565b60006108df604051806040016040528060138152602001723932bbb0b9322137b7b9ba223ab930ba34b7b760691b815250611244565b6000610cb36000805160206117808339815191525490565b6001600160a01b0316826001600160a01b0316149050919050565b600054610100900460ff1680610ce7575060005460ff16155b610d035760405162461bcd60e51b81526004016102bf9061167e565b600054610100900460ff16158015610d25576000805461ffff19166101011790555b610d2e82610dee565b610d36610823565b8015610d48576000805461ff00191690555b5050565b6000816001600160a01b0316610d6e6000805160206117808339815191525490565b6001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610da657600080fd5b505afa158015610dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dde91906113e6565b6001600160a01b03161492915050565b600054610100900460ff1680610e07575060005460ff16155b610e235760405162461bcd60e51b81526004016102bf9061167e565b600054610100900460ff16158015610e45576000805461ffff19166101011790555b610e4e82611287565b610d36427f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a55565b610e7f33610d4c565b610e9b5760405162461bcd60e51b81526004016102bf906116ef565b601581604051602001610eaf9291906115e1565b604051602081830303815290604052805190602001206015610ecf6108a5565b15600080610ee96000805160206117808339815191525490565b6001600160a01b0316631d5a897f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f2157600080fd5b505afa158015610f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5991906113e6565b9050826110b9576001600160a01b038116610f865760405162461bcd60e51b81526004016102bf90611656565b60405163e912c12f60e01b8152600481018690526000906001600160a01b0383169063e912c12f90602401602060405180830381600087803b158015610fcb57600080fd5b505af1158015610fdf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110039190611538565b116110205760405162461bcd60e51b81526004016102bf9061162f565b60405163e912c12f60e01b81526004810186905242906001600160a01b0383169063e912c12f90602401602060405180830381600087803b15801561106457600080fd5b505af1158015611078573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109c9190611538565b106110b95760405162461bcd60e51b81526004016102bf906116cc565b60648611156110fb5760405162461bcd60e51b815260206004820152600e60248201526d746f6f20686967682076616c756560901b60448201526064016102bf565b6104ef866111a0565b604051723932bbb0b9322137b7b9ba223ab930ba34b7b760691b815260130160405180910390207fdb6752b9ae7079fea4a42c6db0ee23fed4ce55ab9e249719b8736e3b32bea282611154610c65565b60408051918252602082018590520160405180910390a26108a2604051806040016040528060138152602001723932bbb0b9322137b7b9ba223ab930ba34b7b760691b81525082611337565b604051761c995dd85c9914985d1a5bd5da5d1a1bdd5d109bdbdcdd604a1b815260170160405180910390207fdb6752b9ae7079fea4a42c6db0ee23fed4ce55ab9e249719b8736e3b32bea2826111f46108a5565b60408051918252602082018590520160405180910390a26108a2604051806040016040528060178152602001761c995dd85c9914985d1a5bd5da5d1a1bdd5d109bdbdcdd604a1b81525082611337565b6000600160008360405160200161125b9190611572565b604051602081830303815290604052805190602001208152602001908152602001600020549050919050565b6001600160a01b0381166112cc5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016102bf565b7f19b7d592cea0dfda222f6a4ea5c5a8d018ee9c6b1d0a917483a405de94eb26cd6113036000805160206117808339815191525490565b604080516001600160a01b03928316815291841660208301520160405180910390a160008051602061178083398151915255565b80600160008460405160200161134d9190611572565b604051602081830303815290604052805190602001208152602001908152602001600020819055505050565b60008083601f84011261138a578182fd5b50813567ffffffffffffffff8111156113a1578182fd5b6020830191508360208260051b85010111156113bc57600080fd5b9250929050565b6000602082840312156113d4578081fd5b81356113df8161176a565b9392505050565b6000602082840312156113f7578081fd5b81516113df8161176a565b60008060208385031215611414578081fd5b823567ffffffffffffffff81111561142a578182fd5b61143685828601611379565b90969095509350505050565b600080600060408486031215611456578081fd5b833567ffffffffffffffff81111561146c578182fd5b61147886828701611379565b909450925050602084013561148c8161176a565b809150509250925092565b600080600080604085870312156114ac578081fd5b843567ffffffffffffffff808211156114c3578283fd5b6114cf88838901611379565b909650945060208701359150808211156114e7578283fd5b506114f487828801611379565b95989497509550505050565b600060208284031215611511578081fd5b813580151581146113df578182fd5b600060208284031215611531578081fd5b5035919050565b600060208284031215611549578081fd5b5051919050565b6017811061156e57634e487b7160e01b600052602160045260246000fd5b9052565b60008251611584818460208701611717565b9190910192915050565b838152606081016115a26020830185611550565b6001600160a01b03929092166040919091015292915050565b604081016115c98285611550565b6001600160a01b039290921660209190910152919050565b604081016115ef8285611550565b8260208301529392505050565b602081526000825180602084015261161b816040850160208701611717565b601f01601f19169190910160400192915050565b6020808252600d908201526c1b9bdd08185b9b9bdd5b98d959609a1b604082015260600190565b6020808252600e908201526d3d32b9379030b73737bab731b2b960911b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b602080825260099082015268746f6f206561726c7960b81b604082015260600190565b6020808252600e908201526d6e6f7420676f7665726e616e636560901b604082015260600190565b60005b8381101561173257818101518382015260200161171a565b83811115610a385750506000910152565b600060001982141561176357634e487b7160e01b81526011600452602481fd5b5060010190565b6001600160a01b03811681146108a257600080fdfe5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c3617a264697066735822122040093dbc712b7549b1e27e36bfff387eee80c426afa5edabdf1e1a7a2599f0a964736f6c63430008040033";

export class VaultController__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultController> {
    return super.deploy(overrides || {}) as Promise<VaultController>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VaultController {
    return super.attach(address) as VaultController;
  }
  connect(signer: Signer): VaultController__factory {
    return super.connect(signer) as VaultController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultControllerInterface {
    return new utils.Interface(_abi) as VaultControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultController {
    return new Contract(address, _abi, signerOrProvider) as VaultController;
  }
}
