/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StrategyQuickSwapLp,
  StrategyQuickSwapLpInterface,
} from "../StrategyQuickSwapLp";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quickRewardPool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldValue",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newValue",
        type: "address",
      },
    ],
    name: "UpdateController",
    type: "event",
  },
  {
    inputs: [],
    name: "STRATEGY_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyBackRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "continueInvesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "created",
    outputs: [
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "doHardWork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "initializeControllable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investAllUnderlying",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investedUnderlyingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "isGovernance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pausedInvesting",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platform",
    outputs: [
      {
        internalType: "enum IStrategy.Platform",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "poolTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolWeeklyRewardsAmount",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readyToClaim",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardTokenIdx",
        type: "uint256",
      },
    ],
    name: "rewardBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "contract SNXRewardInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPoolBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "salvage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "unsalvageableTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6004805460ff1916905560a060405273831753dd7087cac61ab5644b308642cc1c33dc1360809081526200003890600790600162000927565b503480156200004657600080fd5b5060405162002793380380620027938339810160408190526200006991620009ce565b8584866007805480602002602001604051908101604052809291908181526020018280548015620000c457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620000a5575b5050505050848484848461271060017f5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c361860001c62000103919062000a61565b60008051602062002753833981519152146200012f57634e487b7160e01b600052600160045260246000fd5b6200015c60017f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8b62000a61565b60008051602062002773833981519152146200018857634e487b7160e01b600052600160045260246000fd5b6200019e856200079660201b62000fb51760201c565b6000805462010000600160b01b031916620100006001600160a01b038781169190910291909117909155600180546001600160a01b0319169185169190911790558151620001f490600590602085019062000927565b50600381905560005b6005548110156200027957600160026000600584815481106200023057634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff191691151591909117905580620002708162000a7b565b915050620001fd565b5050506001600160a01b039182166000908152600260205260409020805460ff1916600117905550821615159050620002ed5760405162461bcd60e51b81526020600482015260116024820152701e995c9bc81859191c995cdcc81c1bdbdb607a1b60448201526064015b60405180910390fd5b600680546001600160a01b0319166001600160a01b0392831617905588161515935062000353925050505760405162461bcd60e51b815260206004820152600f60248201526e7a65726f20756e6465726c79696e6760881b6044820152606401620002e4565b6001600160a01b038316620003995760405162461bcd60e51b815260206004820152600b60248201526a07a65726f20746f6b656e360ac1b6044820152606401620002e4565b6001600160a01b038216620003df5760405162461bcd60e51b815260206004820152600b60248201526a7a65726f20746f6b656e3160a81b6044820152606401620002e4565b6001600160a01b038116620004375760405162461bcd60e51b815260206004820152601460248201527f7a65726f20717569636b526577617264506f6f6c0000000000000000000000006044820152606401620002e4565b816001600160a01b0316836001600160a01b03161415620004895760405162461bcd60e51b815260206004820152600b60248201526a73616d6520746f6b656e7360a81b6044820152606401620002e4565b836001600160a01b0316816001600160a01b03166372f702f36040518163ffffffff1660e01b815260040160206040518083038186803b158015620004cd57600080fd5b505afa158015620004e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005089190620009a8565b6001600160a01b0316146200054d5760405162461bcd60e51b815260206004820152600a6024820152691ddc9bdb99c81c1bdbdb60b21b6044820152606401620002e4565b600880546001818101835560008381527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee392830180546001600160a01b03808a166001600160a01b031992831617909255855493840190955591909201805486831694169390931790925560408051630dfe168160e01b815290519192871691630dfe168191600480820192602092909190829003018186803b158015620005f457600080fd5b505afa15801562000609573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200062f9190620009a8565b90506000856001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156200066d57600080fd5b505afa15801562000682573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006a89190620009a8565b9050816001600160a01b0316856001600160a01b03161480620006dc5750806001600160a01b0316856001600160a01b0316145b620007195760405162461bcd60e51b815260206004820152600c60248201526b077726f6e6720746f6b656e360a41b6044820152606401620002e4565b816001600160a01b0316846001600160a01b031614806200074b5750806001600160a01b0316846001600160a01b0316145b620007885760405162461bcd60e51b815260206004820152600c60248201526b77726f6e6720746f6b656e3160a01b6044820152606401620002e4565b505050505050505062000ac8565b600054610100900460ff1680620007b0575060005460ff16155b620008155760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620002e4565b600054610100900460ff1615801562000838576000805461ffff19166101011790555b620008438262000872565b6200085b426000805160206200277383398151915255565b80156200086e576000805461ff00191690555b5050565b6001600160a01b038116620008b95760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401620002e4565b7f19b7d592cea0dfda222f6a4ea5c5a8d018ee9c6b1d0a917483a405de94eb26cd620008f2600080516020620027538339815191525490565b604080516001600160a01b03928316815291841660208301520160405180910390a16000805160206200275383398151915255565b8280548282559060005260206000209081019282156200097f579160200282015b828111156200097f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000948565b506200098d92915062000991565b5090565b5b808211156200098d576000815560010162000992565b600060208284031215620009ba578081fd5b8151620009c78162000aaf565b9392505050565b60008060008060008060c08789031215620009e7578182fd5b8651620009f48162000aaf565b602088015190965062000a078162000aaf565b604088015190955062000a1a8162000aaf565b606088015190945062000a2d8162000aaf565b608088015190935062000a408162000aaf565b60a088015190925062000a538162000aaf565b809150509295509295509295565b60008282101562000a765762000a7662000a99565b500390565b600060001982141562000a925762000a9262000a99565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811462000ac557600080fd5b50565b611c7b8062000ad86000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806397c402c411610104578063d6048df5116100a2578063e945cdcd11610071578063e945cdcd146103dc578063f77c4791146103ef578063fbfa77cf14610404578063ffa1ad741461041557600080fd5b8063d6048df5146103b1578063db620485146103b9578063dd882587146103c1578063dee1f0e4146103c957600080fd5b8063bfd131f1116100de578063bfd131f114610381578063c2b18aa014610389578063ce8c42e814610391578063d3df8aa4146103a457600080fd5b806397c402c41461035157806398fc9cfd14610366578063b429afeb1461036e57600080fd5b806359356c5c1161017c57806371a973051161014b57806371a97305146102e55780637a5c08ae146102fa57806386e3ff75146103025780638f37c6a51461031557600080fd5b806359356c5c1461025957806366666aa9146102615780636edd54461461028c5780636f307dc3146102ce57600080fd5b80634a8cfa69116101b85780634a8cfa69146102325780634bde38c81461023a5780634fa5d854146102495780635641ec031461025157600080fd5b80631113ef52146101df578063325a19f1146101f457806345d01e4a1461022a575b600080fd5b6101f26101ed366004611996565b610439565b005b7f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a545b6040519081526020015b60405180910390f35b610217610510565b6101f2610530565b60026040516102219190611ac7565b6101f26105f2565b6101f261070a565b61021761077d565b600654610274906001600160a01b031681565b6040516001600160a01b039091168152602001610221565b6102c160405180604001604052806016815260200175534e58537472617465677946756c6c4275796261636b60501b81525081565b6040516102219190611aef565b6000546201000090046001600160a01b0316610274565b6102ed6107ff565b6040516102219190611a42565b610217610861565b6102176103103660046119f6565b610892565b61034161032336600461195e565b6001600160a01b031660009081526002602052604090205460ff1690565b6040519015158152602001610221565b61035961093f565b6040516102219190611a8f565b600354610217565b61034161037c36600461195e565b610b97565b6101f2610bca565b6102ed610c67565b6101f261039f3660046119f6565b610cc7565b6004546103419060ff1681565b610359610d97565b6101f2610e66565b610217610ece565b6103416103d736600461195e565b610f13565b6101f26103ea36600461195e565b610fb5565b600080516020611c2683398151915254610274565b6001546001600160a01b0316610274565b6102c1604051806040016040528060058152602001640312e302e360dc1b81525081565b33610450600080516020611c268339815191525490565b6001600160a01b03161461049c5760405162461bcd60e51b815260206004820152600e60248201526d3737ba1031b7b73a3937b63632b960911b60448201526064015b60405180910390fd5b6001600160a01b03821660009081526002602052604090205460ff16156104f75760405162461bcd60e51b815260206004820152600f60248201526e6e6f742073616c7661676561626c6560881b6044820152606401610493565b61050b6001600160a01b038316848361109a565b505050565b600061052b61051d61077d565b610525610861565b906110fd565b905090565b6001546001600160a01b03163314806105695750600080516020611c26833981519152546001600160a01b0316336001600160a01b0316145b80610578575061057833610f13565b6105945760405162461bcd60e51b815260040161049390611b22565b60045460ff16156105d05760405162461bcd60e51b81526020600482015260066024820152651c185d5cd95960d21b6044820152606401610493565b60006105da61077d565b11156105f0576105f06105eb61077d565b611110565b565b60045460ff161561062e5760405162461bcd60e51b81526020600482015260066024820152651c185d5cd95960d21b6044820152606401610493565b6001546001600160a01b03163314806106675750600080516020611c26833981519152546001600160a01b0316336001600160a01b0316145b80610676575061067633610f13565b6106925760405162461bcd60e51b815260040161049390611b22565b600660009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106e257600080fd5b505af11580156106f6573d6000803e3d6000fd5b505050506107026111ba565b6105f0610530565b61071333610b97565b80610722575061072233610f13565b6107665760405162461bcd60e51b81526020600482015260156024820152743737ba1031b7b73a3937b63632b91037b91033b7bb60591b6044820152606401610493565b61076e6111c2565b6004805460ff19166001179055565b600080546040516370a0823160e01b8152306004820152620100009091046001600160a01b0316906370a08231906024015b60206040518083038186803b1580156107c757600080fd5b505afa1580156107db573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b9190611a0e565b6060600880548060200260200160405190810160405280929190818152602001828054801561085757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610839575b5050505050905090565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024016107af565b6000600582815481106108b557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561090157600080fd5b505afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190611a0e565b92915050565b6040805160018082528183019092526060916000919060208083019080368337019050509050600061096f610c67565b60008151811061098f57634e487b7160e01b600052603260045260246000fd5b60209081029190910101516006546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a082319060240160206040518083038186803b1580156109de57600080fd5b505afa1580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190611a0e565b90506000600660009054906101000a90046001600160a01b03166001600160a01b031663c8f33c916040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6857600080fd5b505afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa09190611a0e565b600660009054906101000a90046001600160a01b03166001600160a01b031663ebe2b12b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610aee57600080fd5b505afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190611a0e565b610b309190611b9c565b9050670de0b6b3a7640000610b4f826980124610f0445a000000611b5d565b610b599084611b7d565b610b639190611b5d565b83600081518110610b8457634e487b7160e01b600052603260045260246000fd5b6020908102919091010152509092915050565b6000610baf600080516020611c268339815191525490565b6001600160a01b0316826001600160a01b0316149050919050565b6001546001600160a01b0316331480610c035750600080516020611c26833981519152546001600160a01b0316336001600160a01b0316145b80610c125750610c1233610f13565b610c2e5760405162461bcd60e51b815260040161049390611b22565b610c366111dc565b6001546105f0906001600160a01b0316610c4e61077d565b6000546201000090046001600160a01b0316919061109a565b60606005805480602002602001604051908101604052809291908181526020018280548015610857576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610839575050505050905090565b6001546001600160a01b0316331480610d005750600080516020611c26833981519152546001600160a01b0316336001600160a01b0316145b80610d0f5750610d0f33610f13565b610d2b5760405162461bcd60e51b815260040161049390611b22565b610d3361077d565b811115610d71576000610d4e610d4761077d565b83906111f7565b90506000610d63610d5d610861565b83611203565b9050610d6e81611219565b50505b600154600054610d94916001600160a01b0362010000909204821691168361109a565b50565b6040805160018082528183019092526060916000919060208083019080368337019050506006546040516246613160e11b81523060048201529192506001600160a01b031690628cc2629060240160206040518083038186803b158015610dfd57600080fd5b505afa158015610e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e359190611a0e565b81600081518110610e5657634e487b7160e01b600052603260045260246000fd5b6020908102919091010152919050565b610e6f33610b97565b80610e7e5750610e7e33610f13565b610ec25760405162461bcd60e51b81526020600482015260156024820152743737ba1031b7b73a3937b63632b91037b91033b7bb60591b6044820152606401610493565b6004805460ff19169055565b600654604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b1580156107c757600080fd5b6000816001600160a01b0316610f35600080516020611c268339815191525490565b6001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6d57600080fd5b505afa158015610f81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa5919061197a565b6001600160a01b03161492915050565b600054610100900460ff1680610fce575060005460ff16155b6110315760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610493565b600054610100900460ff16158015611053576000805461ffff19166101011790555b61105c8261124a565b611084427f6f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a55565b8015611096576000805461ff00191690555b5050565b6040516001600160a01b03831660248201526044810182905261050b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526112fa565b60006111098284611b45565b9392505050565b60065460008054611135926001600160a01b03620100009092048216929116906113cc565b600654600054611158916001600160a01b036201000090920482169116836113cc565b60065460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a906024015b600060405180830381600087803b15801561119f57600080fd5b505af11580156111b3573d6000803e3d6000fd5b5050505050565b6105f06114f0565b60006111cc610861565b90508015610d9457610d9461177c565b60006111e6610861565b90508015610d9457610d9481611219565b60006111098284611b9c565b60008183106112125781611109565b5090919050565b600654604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401611185565b6001600160a01b03811661128f5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610493565b7f19b7d592cea0dfda222f6a4ea5c5a8d018ee9c6b1d0a917483a405de94eb26cd6112c6600080516020611c268339815191525490565b604080516001600160a01b03928316815291841660208301520160405180910390a1600080516020611c2683398151915255565b600061134f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117e69092919063ffffffff16565b80519091501561050b578080602001905181019061136d91906119d6565b61050b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610493565b8015806114555750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561141b57600080fd5b505afa15801561142f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114539190611a0e565b155b6114c05760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610493565b6040516001600160a01b03831660248201526044810182905261050b90849063095ea7b360e01b906064016110c6565b6000611508600080516020611c268339815191525490565b6001600160a01b031663ae28d1286040518163ffffffff1660e01b815260040160206040518083038186803b15801561154057600080fd5b505afa158015611554573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611578919061197a565b905060005b60055481101561109657600061159282610892565b90506000600583815481106115b757634e487b7160e01b600052603260045260246000fd5b60009182526020822001546001600160a01b031691506115da90829086906113cc565b6115ee6001600160a01b03821685846113cc565b60015460405163451353f160e01b8152600481018490526001600160a01b038381166024830152918216604482015260009186169063451353f190606401602060405180830381600087803b15801561164657600080fd5b505af115801561165a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167e9190611a0e565b9050801561176657600080516020611c26833981519152546001600160a01b03166347b03bba6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116ce57600080fd5b505afa1580156116e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611706919061197a565b6001600160a01b031663f1e84e00826040518263ffffffff1660e01b815260040161173391815260200190565b600060405180830381600087803b15801561174d57600080fd5b505af1158015611761573d6000803e3d6000fd5b505050505b505050808061177490611bdf565b91505061157d565b600660009054906101000a90046001600160a01b03166001600160a01b031663e9fad8ee6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156117cc57600080fd5b505af11580156117e0573d6000803e3d6000fd5b50505050565b60606117f584846000856117fd565b949350505050565b60608247101561185e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610493565b843b6118ac5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610493565b600080866001600160a01b031685876040516118c89190611a26565b60006040518083038185875af1925050503d8060008114611905576040519150601f19603f3d011682016040523d82523d6000602084013e61190a565b606091505b509150915061191a828286611925565b979650505050505050565b60608315611934575081611109565b8251156119445782518084602001fd5b8160405162461bcd60e51b81526004016104939190611aef565b60006020828403121561196f578081fd5b813561110981611c10565b60006020828403121561198b578081fd5b815161110981611c10565b6000806000606084860312156119aa578182fd5b83356119b581611c10565b925060208401356119c581611c10565b929592945050506040919091013590565b6000602082840312156119e7578081fd5b81518015158114611109578182fd5b600060208284031215611a07578081fd5b5035919050565b600060208284031215611a1f578081fd5b5051919050565b60008251611a38818460208701611bb3565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611a835783516001600160a01b031683529284019291840191600101611a5e565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611a8357835183529284019291840191600101611aab565b6020810160058310611ae957634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260008251806020840152611b0e816040850160208701611bb3565b601f01601f19169190910160400192915050565b6020808252600990820152683337b93134b23232b760b91b604082015260600190565b60008219821115611b5857611b58611bfa565b500190565b600082611b7857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611b9757611b97611bfa565b500290565b600082821015611bae57611bae611bfa565b500390565b60005b83811015611bce578181015183820152602001611bb6565b838111156117e05750506000910152565b6000600019821415611bf357611bf3611bfa565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610d9457600080fdfe5165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c3617a2646970667358221220522d8bc74a16f78d2938cadea0f5e11fb8ed5769b49d4527c675be2e1db8a3b764736f6c634300080400335165972ef41194f06c5007493031d0b927c20741adcb74403b954009fd2c36176f55f470bdc9cb5f04223fd822021061668e4dccb43e8727b295106dc9769c8a";

export class StrategyQuickSwapLp__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _controller: string,
    _vault: string,
    _underlying: string,
    _token0: string,
    _token1: string,
    _quickRewardPool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StrategyQuickSwapLp> {
    return super.deploy(
      _controller,
      _vault,
      _underlying,
      _token0,
      _token1,
      _quickRewardPool,
      overrides || {}
    ) as Promise<StrategyQuickSwapLp>;
  }
  getDeployTransaction(
    _controller: string,
    _vault: string,
    _underlying: string,
    _token0: string,
    _token1: string,
    _quickRewardPool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _controller,
      _vault,
      _underlying,
      _token0,
      _token1,
      _quickRewardPool,
      overrides || {}
    );
  }
  attach(address: string): StrategyQuickSwapLp {
    return super.attach(address) as StrategyQuickSwapLp;
  }
  connect(signer: Signer): StrategyQuickSwapLp__factory {
    return super.connect(signer) as StrategyQuickSwapLp__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyQuickSwapLpInterface {
    return new utils.Interface(_abi) as StrategyQuickSwapLpInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StrategyQuickSwapLp {
    return new Contract(address, _abi, signerOrProvider) as StrategyQuickSwapLp;
  }
}
